// TODO
// moveable item stoped in time
// moveable item faster
// moveable item slower

// item connection status since given time period
// get item actual power status
// request response from item 
// is item out of path
// is item out of schedule
// is item path rounded
// is item in emergency

// for user creation use google authenticator
// mongo indexing items by id, but not lat-lng. index item by lat/lng
// implement in memory caching with redis

Tech stack:
- node.js
- mongodb
- aws
- graphql
- express

- ilk olarak basit bir database tasarla. lat/lng Create/Read
- bir katman database erisim katmani
- bir katman business logic
- bir katman web service API
- her katman icin unit testler/mock data
- TDD seklinde gelistirme yap
- sadece en basit sekilde dusun
-  github da tut, readme dosyasini her zaman guncel tut
- mobile app ve web app en son asma
- mobile icin react native bir alternatif olabilir
- web icin react bir alternatif olabilir
- bir ise baslamadan once iyice analiz et, kutuphane kullanmak mi kendin yapmak mi cok iyi dusunerek karar ver. Onemli olan cok zaman kaybetmemek, takilmamak, sonuc en basit hal ile ulasmak
- react native ile konum bilgisi alinabiliyor, background service kaydedilebiliyor. 
- react icinde bootstrap, material gibi UI kutuphaneleri eklenebiliyor. 

- createMovable
- createStatic
- createCase
- createAction
- createScenerio

# Senaryolar
-------------

Senaryo 1. - standart user
user uygulamaya girer, ekranda bir tane "start by register" butonu olur. bastiginda kullanicidan email adresini ister. start butonu "recording stop" olur. servera lokasyon bilgisini gonderir. sisteme giren diger tum kullanicilar email ile arama yaptiklarinda kullanici lokasyonunu gorurler.

Senaryo 2. - follow user
user web uygulamaya girer. mail adresi ile diger user arar. follow butonuna basarak kullaniciyi takibe baslar. 

Senaryo 3. - private user
user ayarlardan kenini private yapar. diger kullanicilar email ile aradiklarinda kullanicinin lokasyonunu goremezler. gormek icin follow request gonderir. private user requesti kabul eder ve lokasyonu paylasmaya baslar

Senaryo 4. - grup user
User 1 grup oluşturur. Grup kodunu telefona girer. Grup kodunu user 2 ye gönderir. User 2 grup kodunu telefona girer. İki user birbirinin konumunu görebilir. 

Senaryo 5. - senaryo olusturma
User 1 area oluşturur. User 1 senaryo oluşturur. Senaryo "user 2 area ya girerse user 1 e notification gönder" seklinde olur. user 2 alana girince user 1 e notification gider

Senaryo 6. - cihaz bilgisi
user 1 pil durumu dusuk konuma gelir. user 2 ekraninda user 1 pil durumunu gorur. user 1 pil biter ve baglanti kopar. user 2 ekraninda user 1 icin en son baglanti zamanini, son baglanti zamanindaki cihaz bilgisi (pil durumu, network durumu) ve konum bilgisini gorur. 

Senaryo 7- Multiple app
kullanici bir app-id olusturur. app-id altinda item olusturur. app-id altinda user olusturur. app-id altinda group olusturur. artik tum crud islemleri app-id filtresi altinda olur yani bir app-id altindaki item, user, group digerini goremez. app-id bir sandbox gorevi gorur. boylece api bircok farkli uygulamaya entegre edilebilir. 

Senaryo 8 -  Third party integration. entegrasyon api userinden oldugu gibi iframe html content uzerinden de olabilir. kullanici wix sitesine girer, iframe olusturur. appid ile birlikte belli bir url cagirir, o url iframe genisligine gore responsive html content ve widget doner. arka tarafta app-id ve cagiran url birbirine eslesmelidir. yani bir app-id widget sadece belli bir url den cagirilabilir.  

# Mobil uygulama gelistirmeden nasil yapabilirim?
-------------------------------------------------
Ornek bir senaryoda herhangi bir item yaratmak icin mobil uygulamaya gerek yok. web arayuzu veya API uzerinden yaratilabilir. 
kullanici yaratmak da ayni sekilde web veya API uzerinden
Use case;
- user-1 yarat, konumu onemli degil
- user-2 yarat bir konum olusturma
- user-1 bir item olusturur konumu user-2 ye 100 metre uzakta olur
- user-1 case(x itema y metre yaklasilinca) ve action (notification gonder) birlestirerek senaryo olusturur "User-2 item-1 e 100 metre yaklasinca User-2 ye notification gondersin"
- user-2 konum guncellenir (100m disarida), case match oluyormu diye bakilir, herhangibir match olmadigi icin bir aksiyon gerceklesmes
- user-2 konum guncellenir (100m iceride), case match oldugu icin aksiyon gerceklesir
- notification tablosuna veri girer user-2 notify edilebilir, notification basarili olunca notification silinir veya disabled yapilir



